ModSecurity

O ModSecurity é um Web Application Firewall, ou seja, um programa que pode ser usado para inspecionar informações que passam pelo servido web interceptando requisições maliciosas antes que sejam processadas pela aplicação.

O ModSecurity conta com a ajuda do Open Web Application Security Project's Core Rule Set (OWASP CRS), que traz várias regras para proteger contra SQL Injection, denial of service attacks, malformed requests, cross site scripting attacks e outros.

O script de configuração é o:

/usr/local/etc/modsecurity/modsecurity.conf

Edite e mude a linha
SecRuleEngine DetectionOnly

Para
SecRuleEngine On

Então reinicie o Apache

Mude a linha

SecRequestBodyLimit 13107200
Que é 12.5 MB



A configuração default é:

SecDefaultAction "phase:1,deny,log"

Outras

"Collaborative Detection Blocking":

SecAction \
  "id:'900004', \
  phase:1, \
  t:none, \
  setvar:tx.anomaly_score_blocking=on, \
  nolog, \
  pass"

"Collaborative Detection Severity Levels":

SecAction \
  "id:'900001', \
  phase:1, \
  t:none, \
  setvar:tx.critical_anomaly_score=5, \
  setvar:tx.error_anomaly_score=4, \
  setvar:tx.warning_anomaly_score=3, \
  setvar:tx.notice_anomaly_score=2, \
  nolog, \
  pass"

Anomaly_score transaction variable:
# Alert and Block based on Anomaly Scores
#
SecRule TX:ANOMALY_SCORE "@gt 0" \
    "chain,phase:2,id:'981176',t:none,deny,log,msg:'Inbound Anomaly Score Exceeded (Total Score: %{TX.ANOMALY_SCORE}, SQLi=%{TX.SQL_INJECTION_SCORE}, XSS=%{TX.XSS_SCORE}): Last Matched Message: %{tx.msg}',logdata:'Last Matched Data: %{matched_var}',setvar:tx.inbound_tx_msg=%{tx.msg},setvar:tx.inbound_anomaly_score=%{tx.anomaly_score}"
        SecRule TX:ANOMALY_SCORE "@ge %{tx.inbound_anomaly_score_level}" chain
                SecRule TX:ANOMALY_SCORE_BLOCKING "@streq on" chain
                        SecRule TX:/^\d+\-/ "(.*)"

Contra ataques DDOS

SecAction \
  "id:'900015', \
  phase:1, \
  t:none, \
  setvar:'tx.dos_burst_time_slice=60', \
  setvar:'tx.dos_counter_threshold=100', \
  setvar:'tx.dos_block_timeout=600', \
  nolog, \
  pass"

Força bruta:

SecAction \
  "id:'900014', \
  phase:1, \
  t:none, \
  setvar:'tx.brute_force_protected_urls=#/portal/administrator#', \
  setvar:'tx.brute_force_burst_time_slice=60', \
  setvar:'tx.brute_force_counter_threshold=10', \
  setvar:'tx.brute_force_block_timeout=300', \
  nolog, \
  pass"

Whitelist de IPs

SecRule REMOTE_ADDR “@ipMatch 192.168.1.101” \
id:102,phase:1,t:none,nolog,pass,ctl:ruleEngine=off

Shellshock Bash Attack

SecRule REQUEST_LINE|REQUEST_HEADERS|REQUEST_HEADERS_NAMES "@contains () {" "phase:1,id:'2100080',block,t:none,t:utf8toUnicode,t:urlDecodeUni,t:compressWhitespace,msg:'SLR: Bash ENV Variable Injection Attack',tag:'CVE-2014-6271',tag:'http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2014-6271',tag:'https://securityblog.redhat.com/2014/09/24/bash-specially-crafted-environment-variables-code-injection-attack/'"


