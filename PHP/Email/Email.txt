Formulário de e-mail e envio com PHP

Como abandonar um script pronto em Perl e criar um formulário de envio de e-mail simples com PHP.
por Filipe Teixeira 18/08/2015

Há anos atrás, quando queríamos colocar um formulário de e-mail em nosso site, simplesmente pegávamos um script em Perl que funcionava, mas não fazíamos ideia de como as coisas aconteciam por trás. Neste post demonstrarei que é muito simples fazer a mesma coisa em PHP. Perceba que o foco é principalmente no PHP, e não necessariamente na validação do formulário ou CSS, embora usaremos algumas boas práticas de validação.

Aviso: O script apenas enviará o e-mail se estiver em um servidor. Você não conseguirá mandar o e-mail do localhost (No Wamp ou Xampp por exemplo).
Criando os arquivos

Criaremos quatro arquivos que irão conter nosso script.

O index.php, para que a pasta sempre abra no nosso arquivo de contato (você pode renomear depois para contato.php se quiser). O arquivo mail_ok.php, para exibir a mensagem que o e-mail foi enviado, e o mail_error.php, contendo a mensagem de erro. Finalmente, o mail_send.php, contendo o script que envia o e-mail propriamente dito.
index.php

No index.php vamos fazer o nosso formulário:

<!DOCTYPE html>
<html lang="pt-br">
    <head>
        <meta charset="utf8">
        <title>Contato</title>
    </head>
    <body>
        <form action="mail_send.php" method="post">
            <fieldset>
                <label for="email">E-mail: </label>
                <input required name="email" type="email">
            </fieldset>
            <fieldset>
                <label for="mensagem">Mensagem: </label>
                <textarea required name="mensagem"></textarea>
            </fieldset>
            <fieldset>
                <button type="submit">Enviar</button>
            </fieldset>
        </form>
    </body>
</html>

Esse formulário contém os campos e-mail e mensagem, ambos campos obrigatórios.

Vamos agora fazer o mail_ok.php e mail_error.php:
mail_ok.php

 <!DOCTYPE html>
<html lang="pt-br">
    <head>
        <meta charset="utf8">
        <title>Sucesso</title>
    </head>
    <body>
        <h1>Sucesso</h1>
        
        <hr>
        
        <p>O e-mail foi enviado com sucesso.</p>
    </body>
</html>

``mail_error.php

 <!DOCTYPE html>
<html lang="pt-br">
    <head>
        <meta charset="utf8">
        <title>Erro</title>
    </head>
    <body>
        <h1>Erro</h1>
        
        <hr>
        
        <p>Houve um erro no envio do e-mail. <a href="index.php">Tentar novamente</a>.</p>
    </body>
</html>

Os arquivos anteriores mostram mensagens se o e-mail foi enviado. O seguinte script PHP irá redirecionar para eles:
mail_send.php

<?php

function pegaValor($valor) {
    return isset($_POST[$valor]) ? $_POST[$valor] : '';
}

function validaEmail($email) {
    return filter_var($email, FILTER_VALIDATE_EMAIL);
}

function enviaEmail($de, $assunto, $mensagem, $para, $email_servidor) {
    $headers = "From: $email_servidor\r\n" .
               "Reply-To: $de\r\n" .
               "X-Mailer: PHP/" . phpversion() . "\r\n";
    $headers .= "MIME-Version: 1.0\r\n";
    $headers .= "Content-Type: text/html; charset=ISO-8859-1\r\n";
  
  mail($para, $assunto, nl2br($mensagem), $headers);
}

$email_servidor = "email@servidor.com";
$para = "seu@email.com";
$de = pegaValor("email");
$mensagem = pegaValor("mensagem");
$assunto = "Assunto da mensagem";

?>

Este último script define três funções:

    pegaValor: se existir, pega a váriavel enviada via ‘post’, senão, retorna uma string vazia;
    validaEmail: retorna se o e-mail é válido;
    enviaEmail : chama a função mail do PHP com as variáveis que definimos.

As variáveis $de e $mensagem irão pegar os valores enviados pelo formulário. Nas variáveis $email_servidor e $para você deverá colocar seu e-mail do servidor e o e-mail para o qual será enviado o formulário, respectivamente. A variável $assunto será, obviamente, o assunto da mensagem.
Corpo do script

if ($nome && validaEmail($de) && $mensagem) {
    enviaEmail($de, $assunto, $mensagem, $para, $email_servidor);
    $pagina = "mail_ok.php";
} else {
    $pagina = "mail_error.php";
}

header("location:$pagina");

Esta parte do script é o controle de fluxo. Se as variáveis não forem vazias e o e-mail for válido, enviará o e-mail e atribuirá a variável $pagina para mail_ok.php. Caso contrário, a variável $pagina será mail_error.php. E finalmente, redirecionaremos a página com a função header.

Aviso: É de suma importância verificar no seu editor de texto se a codificação é UTF-8 sem BOM. Se não for, o script irá enviar um espaço em branco antes do cabeçalho de redirecionamente, e irá aparecer o seguinte erro:

Cannot modify header information - headers already sent

Com isso nosso script PHP está pronto. Adeus Perl!
https://tableless.com.br/formulario-de-e-mail-e-envio-com-php/


Formulário em PHP usando o phpMailer

IMPORTANTE:: Estas instruções funcionam com praticamente TODAS versões do PHP.

Efetue o download do phpmailer no endereço: http://forum.itmnetworks.com.br/downloads/phpmailer.zip e descompactar os arquivos em seu computador, depois envie os arquivos via FTP para o mesmo diretório onde vai existir os arquivos do seu formulario ou de seu script que vai enviar o(s) email(s).

Exemplo de código simples para o envio dos dados de um formulário para uma determinada conta de e-mail:

Copie o código abaixo e salve com o nome de formulario.php este é o arquivo do seu formulário.

<!-- Inicio do arquivo formulario.php -->
<html>
<head>
<title>ITM NETWORKS - phpMailer</title>
</head>
<body>
<p align="center"><font face="Arial">Exemplo de uso do phpMailer<br>
</font>
</p>
<form method="POST" action="enviar.php" name="form" target="_self">
<div align="center">
<table border="0" width="43%">
<tr>
<td width="23%"><font face="Arial">Nome:</font></td>
<td width="74%"><font face="Arial"><input type="text" name="fromnome" size="20"></font></td>
</tr>
<tr>
<td width="23%"><font face="Arial">E-Mail:</font></td>
<td width="74%"><font face="Arial"><input type="text" name="fromemail" size="20"></font></td>
</tr>
<tr>
<td width="23%"><font face="Arial">Assunto:</font></td>
<td width="74%"><font face="Arial"><input type="text" name="assunto" size="20"></font></td>
</tr>
<tr>
<td width="23%" valign="top"><font face="Arial">Mensagem:</font></td>
<td width="74%"><font face="Arial"><textarea rows="5" name="mensagem" cols="30"></textarea></font></td>
</tr>
<tr>
<td width="23%"></td>
<td width="74%"><font face="Arial"><input type="submit" value="enviar" name="botao"></font></td>
</tr>
</table>
<p><font face="Arial" size="1"><a target="_self" href="http://www.itmnetworks.com.br">
<span style="text-decoration: none"><font color="#000000">www.itmnetworks.com.br</font></span></a></font>
</div>
</form>
</body>
</html>
<!-- Fim do arquivo formulario.php -->

Copie o código abaixo e salve com o nome de enviar.php este é o arquivo que vai pegar todas as informações do seu formulário e enviar para o email descrito na linha $cMail->AddAddress.

//Inicio do arquivo enviar.php
<?
if (!class_exists("phpmailer")) {
require("PHPMailerAutoload.php");
}
$cMail = new PHPMailer();
$cMail->IsSMTP();
$cMail->IsHTML(true);
$cMail->SMTPAuth = true;
$cMail->Host = "mail.seusite.com.br";
$cMail->Username = "seuemail@seusite.com.br";
$cMail->Password = "senhadoseuemail";
$cMail->From = $_POST["fromemail"];
$cMail->FromName = $_POST["fromnome"];
$cMail->AddAddress("emaildestino@dominiodestino.com.br");
$cMail->Subject = $_POST["assunto"];
$cMail->Body = $_POST["mensagem"];

if (strpos($_SERVER["HTTP_REFERER"],$_SERVER["HTTP_HOST"])) {
if(!$cMail->Send()) {
echo "Erro no envio da mensagem";
}
else
{
echo "Mensagem enviada com sucesso !!!";
}
}
?>
//Fim do arquivo enviar.php

Lembre-se que nosso servidor de envio de emails requer autenticação de SMTP entao nao se esqueça de incluir as seguintes linhas em seu código:

$cMail->Username = "seuemail@seusite.com.br";
$cMail->Password = "suasenhadoemail";


Lembre-se também das regras antispam dos servidores da ITM NETWORKS:

- Quando o email de ORIGEM (FROM) for de fora do nosso servidor, o email de DESTINO (AddAddress) deve ser obrigatoriamente de dentro do nosso servidor;

- Quanto o email de DESTINO (AddAddress) for de fora do nosso servidor, o email de ORIGEM (FROM) deve ser obrigatoriamente de dentro do nosso servidor.

IMPORTANTE:: Estas instruções funcionam com praticamente TODAS versões do PHP.

QQ duvida estamos a disposição EXCLUSIVAMENTE para os clientes da ITM NETWORKS em qualquer um dos meios de comunicação disponíveis no endereço http://itm.guru/suporte
https://forum.itmnetworks.com.br/viewtopic.php?t=473


Enviar e-mail em PHP
$dest = "destinatario@gmail.com"; //Email de destino
$assunto = "Assunto"; //Assunto
$corpo= "Corpo da mensagem. É permitido o uso de HTML."; //Corpo do e-mail
//Cabecalho do email
$headers = "De: Gabriella fonseca.gabriella@gmail.comrn"; //Remetente
$headers .= "X-Mailer: PHP5n";
$headers .= 'MIME-Version: 1.0' . "n";
$headers .= 'Content-type: text/html; charset=iso-8859-1' . "rn"; //
mail($dest,$assunto,$corpo,$headers);


